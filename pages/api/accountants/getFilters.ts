import type { NextApiRequest, NextApiResponse } from 'next'
import { IFilterOption, IGeneralFilter } from '../../../types/IFilters'

// /api/accountants/getFilters
//todo:
// - put in here also the suggestions for each filter such as place names and software names etc.
export default async (req: NextApiRequest, res: NextApiResponse) => {
  const { body: filters }: { body: IGeneralFilter[] } = req

  const filterOptions: IFilterOption[] = [
    {
      category: 'production software',
      possibleComparisons: ['is exactly'],
      valueType: 'string',
      suggestions: [
        'CCH Software',
        'IRIS Accounts Production',
        'Taxfiler',
        'Digita Accounts Production Advanced',
        'PTP Accounts Production',
        'Acorah Software Products - Accounts Production',
        'Sage Accounts Production 20.0 - FRS102_2019',
        'Caseware UK (AP4) 2019.0.227',
        'TVision DynamicsNAV Interface for Brookson Ltd'
      ]
    },
    {
      category: 'number of clients',
      possibleComparisons: ['is between'],
      valueType: 'number'
    },
    {
      category: 'location',
      possibleComparisons: ['begins with', 'is exactly', 'includes', 'ends with'],
      valueType: 'string',
      suggestions: [
        'Bristol',
        'Harrow',
        'Kirkwall',
        'South East London',
        'Bournemouth',
        'Swindon',
        'Milton Keynes',
        'Twickenham',
        'Leeds',
        'Birmingham',
        'Oldham',
        'Stockport',
        'Blackpool',
        'Truro',
        'Portsmouth',
        'Dudley',
        'Stevenage',
        'Slough',
        'Wolverhampton',
        'Newport',
        'Hemel Hempstead',
        'Darlington',
        'Crewe',
        'Bradford',
        'Northern Ireland',
        'Taunton',
        'Newcastle upon Tyne',
        'Leicester',
        'Swansea',
        'Cardiff',
        'Rochester',
        'Lincoln',
        'Durham',
        'Bath',
        'Exeter',
        'Doncaster',
        'Galashiels',
        'Torquay',
        'North West London',
        'Kirkcaldy',
        'Brighton',
        'Edinburgh',
        'Coventry',
        'Southend-on-Sea',
        'Carlisle',
        'St Albans',
        'Tonbridge',
        'Sheffield',
        'Paisley',
        'Gloucester',
        'Falkirk and Stirling',
        'Telford',
        'Oxford',
        'West London',
        'Ipswich',
        'Northampton',
        'Cambridge',
        'Perth',
        'York',
        'Hull',
        'South West London',
        'Aberdeen',
        'Kilmarnock',
        'Shrewsbury',
        'Llandudno',
        'Derby',
        'Bromley',
        'Guildford',
        'Outer Hebrides',
        'Dumfries and Galloway',
        'Lerwick',
        'Romford',
        'Wakefield',
        'Plymouth',
        'Inverness',
        'Sunderland',
        'East London',
        'Lancaster',
        'Warrington',
        'Manchester',
        'Central London',
        'Worcester',
        'Peterborough',
        'Dartford',
        'Chester',
        'Stoke-on-Trent',
        'Motherwell',
        'Hereford',
        'Southall',
        'Dundee',
        'Wigan',
        'Enfield',
        'Dorchester',
        'Luton',
        'Watford',
        'Southampton',
        'Bolton',
        'North London',
        'Harrogate',
        'Sutton',
        'Canterbury',
        'Croydon',
        'Colchester',
        'Chelmsford',
        'Kingston upon Thames',
        'Nottingham',
        'Huddersfield',
        'Reading',
        'Glasgow',
        'Blackburn',
        'Halifax',
        'Redhill',
        'Ilford',
        'Llandrindod Wells',
        'Norwich',
        'Preston',
        'Liverpool',
        'Cleveland',
        'Salisbury',
        'Walsall'
      ]
    },
    {
      category: 'name',
      possibleComparisons: ['begins with', 'is exactly', 'includes', 'ends with'],
      valueType: 'string'
    },
    {
      category: 'client company number',
      possibleComparisons: ['is exactly'],
      valueType: 'string'
    }
  ]

  res.json(filterOptions)
}
